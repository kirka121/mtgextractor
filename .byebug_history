c
n
regex_name(name)
c
card_types_regex
page_html.match(card_types_regex)
regex_name(name)
c
I18n.transliterate('Æther Mutation')
I18n.transliterate('kirka')
c
I18n.transliterate('kirka')
I18n.available_locales = [:en]
I18n.transliterate('kirka')
c
I18n.transliterate('kirka')
c
I18n.transliterate('kirka')
ActiveSupport::Inflector.transliterate("Æther Mutation").to_s
"Æther Mutation".paremetarize
"Æther Mutation".chars.normalize(:kd)
"Æther Mutation".chars.normalize
"Æther Mutation".chars
"Æther Mutation".mb_chars
"Æther Mutation".mb_chars.normalize(:kd).gsub(/[^\x00-\x7F]/n,'').downcase.to_s
regex_name.mb_chars.normalize(:kd).gsub(/[^\x00-\x7F]/n,'').downcase.to_s
regex_name
regext_name
card_html = card_html.match(single_card_regex)
card_html = card_html.match(single_card_regex)[1]
card_html[0]
 card_html = card_html.match(single_card_regex)
 single_card_regex = /Card Name:<\/div>\s+<div[^>]*>\s+Aether *Mutation(.+?Expansion:)/mi
single_card_regex
card_html.match(single_card_regex)
n
!multipart_card?
c
card_types = page_html.match(card_types_regex)[0]
card_types = page_html.match(card_types_regex)
card_types_regex = /Types:<\/div>\s+<div[^>]*>\s+([^>]+)<\/div>/
card_types = page_html.match(card_types_regex)
card_types_regex = /(?:Card Name:<\/div>\s+<div[^>]*>\s+Aether\\ Mutation.+?Types:<\/div>\s+<div[^>]*>\s+([^>]+)<\/div>)/
card_types = page_html.match(card_types_regex)
card_types_regex = /(?:Card Name:<\/div>\s+<div[^>]*>\s+Aether\\ *Mutation.+?Types:<\/div>\s+<div[^>]*>\s+([^>]+)<\/div>)/
card_types = page_html.match(card_types_regex)
card_types_regex = /(?:Card Name:<\/div>\s+<div[^>]*>\s+Æther\\ *Mutation.+?Types:<\/div>\s+<div[^>]*>\s+([^>]+)<\/div>)/
regex_name(name)
card_types = page_html.match(card_types_regex)
card_types_regex = /(?:Card Name:<\/div>\s+<div[^>]*>\s+Aether Mutation.+?Types:<\/div>\s+<div[^>]*>\s+([^>]+)<\/div>)/
card_types_regex
card_types = page_html.match(card_types_regex)[1]
card_types_regex = /(?:Card Name:<\/div>\s+<div[^>]*>\s+Aether Mutation.+?Types:<\/div>\s+<div[^>]*>\s+([^>]+)<\/div>)/
card_types_regex = /(?:Card Name:<\/div>\s+<div[^>]*>\s+#{regex_name(name)}.+?Types:<\/div>\s+<div[^>]*>\s+([^>]+)<\/div>)/
multipart_card?
card_types = page_html.match(card_types_regex)[1]
 card_types.split("—").collect {|type| type.strip.split(/\s+/)}.flatten
page_html.match(card_types_regex)
card_types_regex = /Types:<\/div>\s+<div[^>]*>\s+([^>]+)<\/div>/
page_html.match(card_types_regex)
card_types_regex
n
name = extract_name(page_html)
multipart_card?
page_html
